{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAOC8wELR2mMi6QwT2hKYBSs5kHGm0G88U\",\n  authDomain: \"crwn-ecom-ccd87.firebaseapp.com\",\n  projectId: \"crwn-ecom-ccd87\",\n  storageBucket: \"crwn-ecom-ccd87.appspot.com\",\n  messagingSenderId: \"380267164331\",\n  appId: \"1:380267164331:web:0f16b354cefd12c100fdee\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log(\"done\");\n};\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n  const querySnapshot = await getDocs(q);\n  const categoryMap = querySnapshot.docs.reduce((acc, docSnapshot) => {\n    const {\n      title,\n      items\n    } = docSnapshot.data();\n    acc[title.toLowerCase()] = items;\n    return acc;\n  }, {});\n  return categoryMap;\n};\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation) => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log(\"error creating the user\", error.message);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInUserWithEmailPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","query","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","getCategoriesAndDocuments","q","querySnapshot","categoryMap","docs","reduce","acc","docSnapshot","items","data","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signInUserWithEmailPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["/Users/prashantverma/Desktop/React/crwn-clothing/src/utils/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from \"firebase/auth\";\n\nimport {\n  getFirestore,\n  doc,\n  getDoc,\n  setDoc,\n  collection,\n  writeBatch,\n  query,\n  getDocs,\n} from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAOC8wELR2mMi6QwT2hKYBSs5kHGm0G88U\",\n  authDomain: \"crwn-ecom-ccd87.firebaseapp.com\",\n  projectId: \"crwn-ecom-ccd87\",\n  storageBucket: \"crwn-ecom-ccd87.appspot.com\",\n  messagingSenderId: \"380267164331\",\n  appId: \"1:380267164331:web:0f16b354cefd12c100fdee\",\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\",\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () =>\n  signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () =>\n  signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\n\nexport const addCollectionAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n\n  objectsToAdd.forEach( (object) => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n\n  await batch.commit();\n  console.log(\"done\");\n};\n\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db , 'categories');\n  const q = query(collectionRef);\n\n  const querySnapshot = await getDocs(q);\n  const categoryMap = querySnapshot.docs.reduce( (acc , docSnapshot) => {\n    const {title , items} = docSnapshot.data();\n    acc[title.toLowerCase()] = items;\n    return acc;\n  } , {} )\n\n  return categoryMap;\n}\n\nexport const createUserDocumentFromAuth = async (\n  userAuth,\n  additionalInformation\n) => {\n  if (!userAuth) return;\n\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation,\n      });\n    } catch (error) {\n      console.log(\"error creating the user\", error.message);\n    }\n  }\n\n  return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const signInUserWithEmailPassword = async (email, password) => {\n  if (!email || !password) return;\n\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const signOutUser = async () => await signOut(auth);\n\nexport const onAuthStateChangedListener = (callback) =>\n  onAuthStateChanged(auth, callback);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}